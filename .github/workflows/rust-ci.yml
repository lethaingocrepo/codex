name: rust-ci
on:
  pull_request:
    branches:
      - main
    paths:
      - "codex-rs/**"
      - ".github/**"
  push:
    branches:
      - main

  workflow_dispatch:

# For CI, we build in debug (`--profile dev`) rather than release mode so we
# get signal faster.

jobs:
  # CI that don't need specific targets
  general:
    name: Format / etc
    runs-on: windows-latest
    defaults:
      run:
        working-directory: codex-rs

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.87
        with:
          components: rustfmt
      - name: cargo fmt
        run: cargo fmt -- --config imports_granularity=Item --check

  # CI to validate on Windows target
  lint_build_test:
    name: Windows - ${{ matrix.target }}
    runs-on: windows-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: codex-rs

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.87
        with:
          targets: ${{ matrix.target }}
          components: clippy

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ${{ github.workspace }}/codex-rs/target/
          key: cargo-${{ matrix.runner }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: cargo clippy
        id: clippy
        continue-on-error: true
        run: cargo clippy --target ${{ matrix.target }} --all-features --tests -- -D warnings

      - name: cargo test
        id: test
        continue-on-error: true
        run: cargo test --all-features --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      # Fail the job if any of the previous steps failed.
      - name: verify all steps passed
        if: |
          steps.clippy.outcome == 'failure' ||
          steps.test.outcome == 'failure'
        run: |
          echo "One or more checks failed (clippy or test). See logs for details."
          exit 1
